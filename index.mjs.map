{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPlainObject from '@stdlib/assert-is-plain-object' ;\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport isArrayLike from '@stdlib/assert-is-array-like' ;\nimport shape2strides from '@stdlib/ndarray-base-shape2strides' ;\nimport strides2offset from '@stdlib/ndarray-base-strides2offset' ;\nimport buffer from '@stdlib/ndarray-base-buffer' ;\nimport numel from '@stdlib/ndarray-base-numel' ;\nimport ndarray from '@stdlib/ndarray-ctor' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// VARIABLES //\n\nvar DTYPE = 'float64';\nvar ORDER = 'row-major';\n\n\n// MAIN //\n\n/**\n* Creates a zero-filled ndarray having a specified shape and data type.\n*\n* @param {(NonNegativeIntegerArray|NonNegativeInteger)} shape - array shape\n* @param {Options} [options] - options\n* @param {string} [options.dtype='float64'] - data type\n* @param {string} [options.order='row-major'] - array order\n* @throws {TypeError} first argument must be either a nonnegative integer or an array of nonnegative integers\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} `dtype` option must be a recognized data type\n* @throws {TypeError} `order` option must be a recognized array order\n* @returns {ndarray} ndarray\n*\n* @example\n* var arr = zeros( [ 2, 2 ] );\n* // returns <ndarray>\n*\n* var sh = arr.shape;\n* // returns [ 2, 2 ]\n*\n* var dt = arr.dtype;\n* // returns 'float64'\n*/\nfunction zeros( shape ) {\n\tvar options;\n\tvar ndims;\n\tvar opts;\n\tvar buf;\n\tvar len;\n\tvar st;\n\tvar sh;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\toptions = arguments[ 1 ];\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( '0N42h', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'dtype' ) ) {\n\t\t\topts.dtype = options.dtype;\n\t\t} else {\n\t\t\topts.dtype = DTYPE;\n\t\t}\n\t\tif ( hasOwnProp( options, 'order' ) ) {\n\t\t\topts.order = options.order;\n\t\t} else {\n\t\t\topts.order = ORDER;\n\t\t}\n\t} else {\n\t\topts.dtype = DTYPE;\n\t\topts.order = ORDER;\n\t}\n\tif ( typeof shape === 'number' ) {\n\t\tsh = [ shape ];\n\t} else if ( isArrayLike( shape ) ) {\n\t\tsh = shape;\n\t} else {\n\t\tthrow new TypeError( format( '0N466', shape ) );\n\t}\n\tndims = sh.length;\n\tif ( ndims > 0 ) {\n\t\tlen = numel( sh );\n\t\tif ( len !== len || len < 0 ) {\n\t\t\t// We should only get here if we've been provided an invalid shape (e.g., an array containing negative integers, etc)...\n\t\t\tthrow new TypeError( format( '0N466', shape ) );\n\t\t}\n\t\tst = shape2strides( sh, opts.order );\n\t} else {\n\t\t// For 0-dimensional arrays, the buffer should contain a single element...\n\t\tlen = 1;\n\t\tst = [ 0 ];\n\t}\n\tbuf = buffer( opts.dtype, len );\n\tif ( buf === null ) {\n\t\tthrow new TypeError( format( '0N45O', 'dtype', opts.dtype ) );\n\t}\n\treturn new ndarray( opts.dtype, buf, sh, st, strides2offset( sh, st ), opts.order ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default zeros;\n"],"names":["ORDER","zeros","shape","options","opts","buf","len","st","sh","arguments","length","isPlainObject","TypeError","format","hasOwnProp","dtype","order","isArrayLike","numel","shape2strides","buffer","ndarray","strides2offset"],"mappings":";;wyBAmCA,IACIA,EAAQ,YA4BZ,SAASC,EAAOC,GACf,IAAIC,EAEAC,EACAC,EACAC,EACAC,EACAC,EAGJ,GADAJ,EAAO,GACFK,UAAUC,OAAS,EAAI,CAE3B,IAAMC,EADNR,EAAUM,UAAW,IAEpB,MAAM,IAAIG,UAAWC,EAAQ,QAASV,IAElCW,EAAYX,EAAS,SACzBC,EAAKW,MAAQZ,EAAQY,MAErBX,EAAKW,MA/CI,UAiDLD,EAAYX,EAAS,SACzBC,EAAKY,MAAQb,EAAQa,MAErBZ,EAAKY,MAAQhB,OAGdI,EAAKW,MAvDK,UAwDVX,EAAKY,MAAQhB,EAEd,GAAsB,iBAAVE,EACXM,EAAK,CAAEN,OACD,KAAKe,EAAaf,GAGxB,MAAM,IAAIU,UAAWC,EAAQ,QAASX,IAFtCM,EAAKN,EAKN,GADQM,EAAGE,OACE,EAAI,CAEhB,IADAJ,EAAMY,EAAOV,KACAF,GAAOA,EAAM,EAEzB,MAAM,IAAIM,UAAWC,EAAQ,QAASX,IAEvCK,EAAKY,EAAeX,EAAIJ,EAAKY,YAG7BV,EAAM,EACNC,EAAK,CAAE,GAGR,GAAa,QADbF,EAAMe,EAAQhB,EAAKW,MAAOT,IAEzB,MAAM,IAAIM,UAAWC,EAAQ,QAAS,QAAST,EAAKW,QAErD,OAAO,IAAIM,EAASjB,EAAKW,MAAOV,EAAKG,EAAID,EAAIe,EAAgBd,EAAID,GAAMH,EAAKY"}